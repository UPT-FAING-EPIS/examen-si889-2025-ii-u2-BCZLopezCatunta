name: 🚀 Publish Version and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  compile:
    name: 🔨 1. Compilar aplicación
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout del código
      uses: actions/checkout@v4
      
    - name: ☕ Configurar Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
        
    - name: 🏗️ Compilar aplicación
      run: |
        echo "=== COMPILANDO APLICACIÓN ==="
        mvn clean compile -B
        echo "✅ Compilación EXITOSA"

  unit-tests:
    name: 🧪 2. Ejecutar tests unitarios
    runs-on: ubuntu-latest
    needs: compile
    
    steps:
    - name: 📥 Checkout del código
      uses: actions/checkout@v4
      
    - name: ☕ Configurar Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
        
    - name: 🧪 Ejecutar tests
      run: |
        echo "=== EJECUTANDO TESTS UNITARIOS ==="
        mvn test -B
        echo "✅ Tests unitarios COMPLETADOS"

  test-coverage:
    name: 📊 3. Reporte de cobertura
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
    - name: 📥 Checkout del código
      uses: actions/checkout@v4
      
    - name: ☕ Configurar Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
        
    - name: 📈 Generar reporte de cobertura
      run: |
        echo "=== GENERANDO REPORTE DE COBERTURA ==="
        mvn clean test jacoco:report -B
        echo "✅ Reporte de cobertura GENERADO"
        
    - name: 📁 Verificar archivos generados
      run: |
        echo "=== ARCHIVOS DE COBERTURA ==="
        ls -la target/site/jacoco/
        
    - name: 🚀 Subir para GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: target/site/jacoco/

  deploy-to-pages:
    name: 🌐 4. Publicar en GitHub Pages
    runs-on: ubuntu-latest
    needs: test-coverage
    permissions:
      pages: write
      id-token: write
      contents: read
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 🚀 Desplegar en GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  create-release:
    name: 🏷️ 5. Publicar Release
    runs-on: ubuntu-latest
    needs: [compile, unit-tests, test-coverage]
    
    steps:
    - name: 📥 Checkout del código
      uses: actions/checkout@v4
      
    - name: 🏷️ Crear Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        name: "Release v${{ github.ref_name }}"
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## 🎉 Release Automático Examen SI889
          
          **Estudiante:** BCZLopezCatunta
          **Fecha:** ${{ github.event.head_commit.timestamp }}
          
          ### ✅ Procesos Completados:
          
          1. 🔨 **Compilación** - Código compilado exitosamente
          2. 🧪 **Tests Unitarios** - Todos los tests ejecutados y pasados
          3. 📊 **Cobertura de Código** - Reporte JaCoCo generado
          4. 🌐 **GitHub Pages** - Reporte publicado online
          5. 🏷️ **Release** - Versión publicada automáticamente
          
          ### 📈 Reporte de Cobertura:
          Disponible en: https://upt-faing-epis.github.io/examen-si889-2025-ii-u2-BCZLopezCatunta/
          
          ---
          *Automáticamente generado por GitHub Actions CI/CD*