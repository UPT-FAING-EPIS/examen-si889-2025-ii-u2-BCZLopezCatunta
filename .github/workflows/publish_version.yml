name: Publish Version and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  compile:
    name: Compilar aplicación
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Configurar Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Compilar aplicación con Maven
      run: |
        echo "Compilando la aplicación con Maven..."
        mvn compile -B
        echo "Compilación completada"

  unit-tests:
    name: Ejecutar tests unitarios
    runs-on: ubuntu-latest
    needs: compile
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Configurar Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Ejecutar tests unitarios con Maven
      run: |
        echo "Ejecutando tests unitarios..."
        mvn test -B
        echo "Tests unitarios completados"

  test-coverage:
    name: Reporte de cobertura de tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Configurar Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Generar reporte de cobertura con JaCoCo
      run: |
        echo "Generando reporte de cobertura..."
        mvn test jacoco:report -B
        echo "Reporte de cobertura generado"
        
    - name: Configurar GitHub Pages
      uses: actions/configure-pages@v4
      
    - name: Subir artifact para GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./target/site

  deploy-to-pages:
    name: Publicar en GitHub Pages
    runs-on: ubuntu-latest
    needs: test-coverage
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Desplegar en GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  create-release:
    name: Crear Release
    runs-on: ubuntu-latest
    needs: [compile, unit-tests, test-coverage]
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Crear Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          Release automático generado por GitHub Actions
          
          Incluye:
          - Compilación de la aplicación
          - Tests unitarios ejecutados
          - Reporte de cobertura generado
          
          Fecha: ${{ github.event.head_commit.timestamp }}